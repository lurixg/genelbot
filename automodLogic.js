const AutoMod = require('./database/models/automod'); // AutoMod modelinin models klasÃ¶rÃ¼nde olduÄŸu varsayÄ±lÄ±yor

module.exports = async (message) => {
  if (message.author.bot) return; // Bot mesajlarÄ±nÄ± yoksay

  const guildId = message.guild.id;
  const autoModSettings = await AutoMod.findOne({ guildId });

  if (!autoModSettings) return; // Ayarlar yoksa Ã§Ä±k

  // AynÄ± kanalda uyarÄ± mesajÄ± gÃ¶nderen fonksiyon
  const sendWarning = async (reason) => {
    const warningMessage = `ðŸš« **UyarÄ±!** MesajÄ±nÄ±z ÅŸu nedenle silindi: **${reason}**.`;
    const warning = await message.channel.send(warningMessage); // UyarÄ± mesajÄ±nÄ± gÃ¶nder
    setTimeout(() => warning.delete(), 10000); // UyarÄ± mesajÄ±nÄ± 10 saniye sonra sil
  };

  // Davet engelleme kontrolÃ¼
  if (autoModSettings.antiInvites && /discord\.gg|discord\.com\/invite/.test(message.content)) {
    await sendWarning('Davet engelleme korumasÄ±'); // UyarÄ± gÃ¶nder
    return message.delete(); // Orijinal mesajÄ± sil
  }

  // BaÄŸlantÄ± engelleme kontrolÃ¼
  if (autoModSettings.antiLinks && /https?:\/\/[^\s]+/.test(message.content)) {
    await sendWarning('BaÄŸlantÄ± engelleme korumasÄ±'); // UyarÄ± gÃ¶nder
    return message.delete(); // Orijinal mesajÄ± sil
  }

  // Spam engelleme kontrolÃ¼ (temel mantÄ±k)
  if (autoModSettings.antiSpam) {
    const userMessages = message.channel.messages.cache.filter(m => m.author.id === message.author.id);
    
    // Son 10 saniyede gÃ¶nderilen son 5 mesajla sÄ±nÄ±rlandÄ±r
    if (userMessages.size > 5) {
      await sendWarning('Spam engelleme korumasÄ±'); // UyarÄ± gÃ¶nder
      return message.delete(); // Ã‡ok fazla mesaj gÃ¶nderildiyse orijinal mesajÄ± sil
    }
  }

  // Beyaz liste kontrolÃ¼
  if (autoModSettings.whitelist.includes(message.author.id)) return; // KullanÄ±cÄ± beyaz listedeyse Ã§Ä±k
  if (message.mentions.roles.size > 0) {
    for (const role of message.mentions.roles.values()) {
      if (autoModSettings.whitelist.includes(role.id)) return; // Rol beyaz listedeyse Ã§Ä±k
    }
  }
};
